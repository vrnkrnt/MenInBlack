package MenInBlack;

import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

 /*
 * @author Emil Lager
 * @author Josefin Olsson
 * @author Karin Mäki-Kala
 * @author Veronika Ranta
 */
public class RegUtrustning extends javax.swing.JFrame {

    private static InfDB idb;

    public RegUtrustning(InfDB idb) {
        initComponents();
        this.idb = idb;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        comboUtrustning = new javax.swing.JComboBox<>();
        inputBenamning = new javax.swing.JTextField();
        bRegistrera = new javax.swing.JButton();
        inputAntal = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        bTillbaka = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Registrera ny utrustning");

        jLabel2.setText("Typ av utrustning: ");

        jLabel4.setText("Benämning: ");

        comboUtrustning.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Välj utrustning", "Kommunikation", "Teknik", "Vapen" }));
        comboUtrustning.setToolTipText("");
        comboUtrustning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboUtrustningActionPerformed(evt);
            }
        });

        inputBenamning.setColumns(8);

        bRegistrera.setText("Registrera");
        bRegistrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRegistreraActionPerformed(evt);
            }
        });

        inputAntal.setColumns(8);

        bTillbaka.setText("Tillbaka");
        bTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTillbakaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bRegistrera)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(inputAntal)
                                .addComponent(inputBenamning)
                                .addComponent(comboUtrustning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(159, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(bTillbaka, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboUtrustning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(inputBenamning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputAntal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(bRegistrera)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(bTillbaka)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bRegistreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRegistreraActionPerformed

        try {
            String id = idb.getAutoIncrement("utrustning", "Utrustnings_ID");
            String benamning = "'" + inputBenamning.getText() + "'";

            String valdUtrustning = comboUtrustning.getSelectedItem().toString();
            String laggTillUtrustning = "INSERT INTO utrustning (Utrustnings_ID, Benamning) VALUES ("
                    + id + ", " + benamning + ");";

            if (Validering.textFaltHarVarde(inputBenamning) && Validering.textFaltHarVarde(inputAntal)) {
                if (valdUtrustning.equalsIgnoreCase("Kommunikation")) {
                    String overforingsTeknik = inputAntal.getText();
                    String laggTillKommunikation = "INSERT INTO kommunikation (Utrustnings_ID, Overforingsteknik) VALUES ("
                            + id + ", '" + overforingsTeknik + "');";
                    idb.insert(laggTillKommunikation);
                    JOptionPane.showMessageDialog(null, "Kommunikationsutrustningen har registrerats");
                }
            }
            if (valdUtrustning.equalsIgnoreCase("Teknik")) {
                String kraftkalla = inputAntal.getText();
                String laggTillTeknik = "INSERT INTO teknik (Utrustnings_ID, Kraftkalla) VALUES ("
                        + id + ", '" + kraftkalla + "');";
                idb.insert(laggTillTeknik);
                JOptionPane.showMessageDialog(null, "Teknikutrustningen har registrerats");
            }
            if (valdUtrustning.equalsIgnoreCase("Vapen")) {
                String kaliber = inputAntal.getText();
                String laggTillVapen = "INSERT INTO vapen (Utrustnings_ID, Kaliber) VALUES ("
                        + id + ", '" + kaliber + "');";
                idb.insert(laggTillVapen);
                JOptionPane.showMessageDialog(null, "Vapnet har registrerats");
            }
            idb.insert(laggTillUtrustning);
            this.setVisible(false);

        } catch (InfException e) {
            JOptionPane.showMessageDialog(null, "Något gick fel. ");
            System.out.println("Internt felmeddelande" + e.getMessage());
        }
    }//GEN-LAST:event_bRegistreraActionPerformed

    private void comboUtrustningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboUtrustningActionPerformed
        String valdUtrustning = comboUtrustning.getSelectedItem().toString();

        if (valdUtrustning.equals("Vapen")) {
            jLabel3.setText("Kaliber: ");
        }
        if (valdUtrustning.equals("Teknik")) {
            jLabel3.setText("Kraftkälla: ");
        }
        if (valdUtrustning.equals("Kommunikation")) {
            jLabel3.setText("Överföringsteknik: ");
        }

    }//GEN-LAST:event_comboUtrustningActionPerformed

    private void bTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTillbakaActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_bTillbakaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bRegistrera;
    private javax.swing.JButton bTillbaka;
    private javax.swing.JComboBox<String> comboUtrustning;
    private javax.swing.JTextField inputAntal;
    private javax.swing.JTextField inputBenamning;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
